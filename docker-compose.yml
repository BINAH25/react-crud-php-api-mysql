version: "3.8"

services:
  frontend:
    build: ./frontend
    container_name: web
    ports:
      - "3000:80"
    depends_on:
      - backend
    logging:
      driver: awslogs
      options:
        awslogs-group: "docker-logs"
        awslogs-stream: "web-logs"
        awslogs-region: "eu-west-1"
    networks:
      - app_network

  backend:
    build: ./api
    container_name: app
    ports:
      - "5000:80"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=rootpassword
      - DB_NAME=react_crud
    logging:
      driver: awslogs
      options:
        awslogs-group: "docker-logs"
        awslogs-stream: "app-logs"
        awslogs-region: "eu-west-1"
    networks:
      - app_network

  db:
    image: mysql:8
    container_name: mysql_database
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: react_crud
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - app_network
    logging:
      driver: awslogs
      options:
        awslogs-group: "docker-logs"
        awslogs-stream: "mysql-logs"
        awslogs-region: "eu-west-1"


volumes:
  db_data:

networks:
  app_network:
    driver: bridge
